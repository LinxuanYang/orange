#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Aug 14 12:44:48 2018

@author: yanglinxuan
"""

#535. Encode and Decode TinyURL

'''
TinyURL is a URL shortening service where you enter a URL such as 
https://leetcode.com/problems/design-tinyurl and it returns a short 
URL such as http://tinyurl.com/4e9iAk.

Design the encode and decode methods for the TinyURL service. 
There is no restriction on how your encode/decode algorithm should work. 
You just need to ensure that a URL can be encoded to a tiny URL and the 
tiny URL can be decoded to the original URL.
'''

longtoshort={}
shorttolong={}

def encode(longUrl):
    '''
    longurl into short
    
    :type longUrl: str
    :rtype: str
    '''
    #check if longUrl exists in dic
    if longUrl in longtoshort:
        return longtoshort[longUrl]
    service='http://tinyurl.com/'
    a=len(longUrl)//10
    l=[]
    for i in range(a):
        l.append(longUrl[i*10])
    l2=''.join(l)
    shortUrl=service+l2
    
    #check if shortUrl exists in dic.values()
    while shortUrl in longtoshort.values():
        shortUrl+='a'
        
    longtoshort[longUrl]=shortUrl
    print(longtoshort)
    shorttolong[shortUrl]=longUrl
    
    return shortUrl
    
def decode(shortUrl):
    '''
    sorturl into long
    
    :type shortUrl:str
    :rtype:str
    '''
    return shorttolong[shortUrl]

print(encode('hctps://leetcode.com/problems/design-tinyurl'))
print(encode('hftps://leetcode.com/problems/design-tinyurl'))
print(encode('hctps://leetcode.com/problems/design-tinyurl'))
print(decode(encode('hctps://leetcode.com/problems/design-tinyurl')))