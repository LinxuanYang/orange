#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Aug 16 14:42:37 2018

@author: yanglinxuan
"""

'''
861. Score After Flipping Matrix
We have a two dimensional matrix A where each value is 0 or 1.

A move consists of choosing any row or column, and toggling each value 
in that row or column: changing all 0s to 1s, and all 1s to 0s.

After making any number of moves, every row of this matrix is interpreted 
as a binary number, and the score of the matrix is the sum of these numbers.

Return the highest possible score.
'''

def matrixScore(A):
    """
    :type A: list[list[int]]
    :rtype: int
    """   
    rowmethod(A)
    colmethod(A)
    return A


def rowmethod(A):
    print('before row method, we have A:',A)
    for i in A:
        if i[0]==0:
            for j in range (len(i)):
                i[j]=1-i[j]
    print('after row method, we have new A:',A)
    return A


def colmethod(A):
    print('before col method, we have A:',A)
    ll=[]
    for i in range (len(A[0])):
        print(len(A[0]))
        print('i=',i)
        l=[]
        for j in range (len(A)):
            l.append(A[j][i])
        print('we have l=',l)
        ll.append(l)
        print('we have ll=',ll)
        print('we have this amount of 1:',l.count(1))
        print('we have this amount of 0:',l.count(0))
        if l.count(1)<l.count(0):
            print('number of 1 is less than number of 0')
            for j in range (len(A)):
                A[j][i]=1-A[j][i]
            print('so we do the colmethod:',A)
   
    return A
            


A=[[0, 1, 0, 1], [0, 1, 1, 1], [1, 0, 0, 1]]
            
print(matrixScore(A))          

            
            
            
            
            
            