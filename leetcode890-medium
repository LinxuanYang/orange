#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Aug 20 16:09:45 2018

@author: yanglinxuan
"""

#890 find and replace pattern
'''
You have a list of words and a pattern, 
and you want to know which words in words matches the pattern.

A word matches the pattern if there exists a permutation of letters p 
so that after replacing every letter x in the pattern with p(x), 
we get the desired word.

(Recall that a permutation of letters is a bijection from letters to letters: 
    every letter maps to another letter, and no two letters map 
    to the same letter.)

Return a list of the words in words that match the given pattern. 

You may return the answer in any order.
'''

words = ["abc","deq","mee","aqq","dkd","ccc"]
pattern = "abb"

def findAndReplacePattern(words,pattern):
    """
    :type words:list[str]
    :type pattern: str
    :rtype: list[str]
    """
    res=[]
    def getVal(word):
        dic,count,l={},0,[]
        
        for i in range (len(word)):
            if word[i] in dic.keys():
                l.append(dic[word[i]])
            else:
                dic[word[i]]=count
                l.append(count)
                count+=1
        return l
    
    lp=getVal(pattern)
    
    for word in words:
        if len(set(word))==len(set(pattern)) and len(word)==len(pattern):
            lw=getVal(word)

            append=True
            for j in range (len(lw)):
                if lw[j]!=lp[j]:
                    append=False
            if append == True:
                res.append(word)
                           
    return res

print(findAndReplacePattern(words,pattern))


